version: "3"

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    networks: 
      - default_net
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
    networks: 
      - default_net
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
  mysql:
    image: mysql:5.6
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: muffin
      MYSQL_USER: root
      MYSQL_PASSWORD:
    ports:
      - "3306:3306"
    networks:
      - default_net
    volumes:
      - sqldb:/var/lib/mysql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  redis-container:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks: 
      - default_net
    volumes:
      - redis-data:/data
  discovery-service:
    build:  ./muffin-discovery
    ports: 
      - "9091:9091"
    #expose:
    #  - "9091"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar
  gateway-service:
    build:  ./muffin-gateway
    depends_on:
      - discovery-service
    ports: 
      - "8080:8080"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar
  order-service:
    build:  ./muffin-order
    depends_on:
      - kafka1
      - discovery-service
      - mysql
    # ports: 
    #  - "8083:8083"
    expose:
      - "8080"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar
  member-service:
    build:  ./muffin-member
    depends_on:
      - kafka1
      - discovery-service
    # ports: 
    #  - "8083:8083"
    expose:
      - "8080"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar    
  ocbpoint-service:
    build:  ./muffin-ocbpoint
    depends_on:
      - kafka1
      - discovery-service
      - mysql
    # ports: 
    #  - "8083:8083"
    expose:
      - "8080"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar    
  station-service:
    build:  ./muffin-station
    depends_on:
      - discovery-service
    # ports: 
    #  - "8083:8083"
    expose:
      - "8080"
    networks: 
      - default_net
    entrypoint: java -Dspring.profiles.active=docker -jar /app.jar       
networks:
  default_net:
    driver: "bridge"

volumes:
  sqldb:
  redis-data:

